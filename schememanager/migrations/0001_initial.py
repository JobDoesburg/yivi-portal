# Generated by Django 4.2.6 on 2024-01-04 20:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields
import schememanager.models.verifier
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("legal_name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                (
                    "legal_registration_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "legal_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("legal_address", models.TextField(blank=True, null=True)),
                ("legal_trade_names", models.JSONField(blank=True, null=True)),
                ("legal_reference_moment", models.DateField(blank=True, null=True)),
                (
                    "billing_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("billing_address", models.TextField(blank=True, null=True)),
                (
                    "billing_postal_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "billing_city",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "billing_country",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Scheme",
            fields=[
                (
                    "id",
                    models.SlugField(max_length=100, primary_key=True, serialize=False),
                ),
                (
                    "scheme_type",
                    models.CharField(
                        choices=[("requestor", "Requestor"), ("issuer", "Issuer")],
                        max_length=10,
                    ),
                ),
                ("production", models.BooleanField(default=False)),
                ("url", models.URLField()),
                ("name_nl", models.CharField(blank=True, max_length=100, null=True)),
                ("name_en", models.CharField(blank=True, max_length=100, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("timestamp_server", models.URLField(blank=True, null=True)),
                ("keyshare_server", models.URLField(blank=True, null=True)),
                ("keyshare_website", models.URLField(blank=True, null=True)),
                (
                    "keyshare_attribute",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("contact_url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Verifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(5)],
                    ),
                ),
                ("name_nl", models.CharField(blank=True, max_length=100, null=True)),
                ("name_en", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "logo",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        storage=schememanager.models.verifier.LogoStorage(),
                        upload_to=schememanager.models.verifier.LogoStorage.get_logo_path,
                    ),
                ),
                (
                    "approved_logo",
                    models.ImageField(blank=True, null=True, upload_to=""),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                ("ready", models.BooleanField(default=False)),
                ("ready_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reviewed_accepted",
                    models.BooleanField(blank=True, default=None, null=True),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("approved_scheme_data", models.JSONField(blank=True, null=True)),
                ("rejection_remarks", models.TextField(blank=True, null=True)),
                ("published_scheme_data", models.JSONField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="verifier_registrations",
                        to="schememanager.organization",
                    ),
                ),
                (
                    "scheme",
                    models.ForeignKey(
                        limit_choices_to={"scheme_type": "requestor"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schememanager.scheme",
                    ),
                ),
            ],
            options={
                "unique_together": {("scheme", "slug")},
            },
        ),
        migrations.CreateModel(
            name="VerifierSessionRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("condiscon", models.JSONField()),
                (
                    "context_description_en",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "context_description_nl",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "verifier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session_requests",
                        to="schememanager.verifier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VerifierAttributeRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attribute_id", models.CharField(max_length=100)),
                ("reason_en", models.TextField()),
                ("reason_nl", models.TextField()),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attributes",
                        to="schememanager.verifiersessionrequest",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VerifierHostname",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("hostname", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "dns_challenge",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "dns_challenge_created_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("dns_challenge_verified", models.BooleanField(default=False)),
                (
                    "dns_challenge_verified_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "dns_challenge_invalidated_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "verifier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hostnames",
                        to="schememanager.verifier",
                    ),
                ),
            ],
            options={
                "unique_together": {("hostname", "verifier")},
            },
        ),
        migrations.CreateModel(
            name="OrganizationAdmin",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admins",
                        to="schememanager.organization",
                    ),
                ),
            ],
            options={
                "unique_together": {("organization", "email")},
            },
        ),
    ]
